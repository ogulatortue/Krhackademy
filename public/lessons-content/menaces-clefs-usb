<section class="content-block">
    <h2><i class="fas fa-industry" aria-hidden="true"></i>La cybersécurité et l'industrie</h2>
    <p>
        La « cybersécurité », « sécurité des systèmes d'information » (SSI) ou plus simplement « sécurité informatique » désigne l'ensemble des moyens permettant de protéger un système d'information: Mécanismes et outils techniques (pare-feu, antivirus, chiffrement, ...), Moyens organisationnels, Procédures (sauvegardes, ...), Lois.
    </p>
    <p>
        Une « cyber-attaque » est une atteinte à un système informatique réalisée dans un but malveillant. Il existe différents types de risques cyber affectant les particuliers, les administrations et les entreprises: Espionnage, Sabotage, Rançonnage, Atteinte à l'image, Cryptojacking.
    </p>
    <p>
        La cybersécurité complète la sécurité physique. La sécurité physique vise traditionnellement à empêcher les accès physiques non autorisés avec des Murs épais, Portes sécurisées, Clôtures, Agents de sécurité, Vidéo protection, Alarmes.
    </p>
    <p>
        Pendant longtemps, ces seules mesures de sécurité physique ont suffi à protéger les installations industrielles, et notamment les installations de production, transport et distribution d'électricité. Les pirates informatiques ne s'intéressaient guère aux systèmes industriels qu'ils ne comprenaient pas. Par ailleurs, ces systèmes industriels n'étaient pas accessibles de l'extérieur. Les entreprises étaient éventuellement victimes d'espionnage industriel, mais c'était le réseau de l'informatique bureautique qui était attaqué.
    </p>
    <p>
        Aujourd'hui, l'industrie s'est grandement informatisée et robotisée (OT: Operational Technology). Afin d'offrir de nouveaux services autant aux clients qu'aux opérateurs des installations industrielles, les systèmes sont maintenant interconnectés. Les industries sont exposées aux risques de cybersécurité et aux attaques préméditées ou opportunistes.
    </p>
</section>

<section class="content-block">
    <h2><i class="fas fa-book-reader" aria-hidden="true"></i>La norme IEC 62443</h2>
    <p>
        IEC 62443 : norme sur la cybersécurité des systèmes industriels.
    </p>
    <p>
        IEC 62443-3-3: segmentation des réseaux, défense en profondeur. Modèle également connu sous le nom: ISA-99 / Purdue Reference Model.
    </p>
    <h3>Les data diodes</h3>
    <p>
        Une passerelle unidirectionnelle ou data diode est un périphérique réseau qui permet aux données de circuler dans une seule direction. Les data diodes se trouvent le plus souvent dans les environnements de haute sécurité. Elles servent de connexions entre deux réseaux de classifications de sécurité différentes.
    </p>
</section>

<section class="content-block">
    <h2><i class="fas fa-brands fa-usb" aria-hidden="true"></i>Les menaces USB</h2>
    <p>
        Des attaques opportunistes ou savamment planifiées peuvent s'appuyer sur des périphériques USB pour contourner les équipements de sécurité du réseau (pare-feu, NIDS, ...). Un opérateur peut transporter et exécuter, à son insu, un programme malveillant. Une personne malveillante, disposant d'un accès physique même temporaire, peut déposer un malware voire installer un système de prise de contrôle à distance. Les périphériques USB peuvent devenir des menaces majeures en cas de sensibilisation insuffisante du personnel, particulièrement en l'absence de mise à jour du système ou en l'absence de moyen de détection.
    </p>
    <h3>Les différents types de périphériques USB</h3>
    <p>
        L'universalité du bus USB permet la connexion de différents types de périphériques : « Communications » (modem, adaptateur Ethernet, ...), « Human interface device » (clavier, souris, ...), « Image » (scanner, appareil photo, ...), « Printer », « Mass storage » (clé USB, ...), « USB hub », « Smart Card », « Content security » (lecteur d'empreintes, ...), « Video » (webcam, ...), etc... Un même périphérique peut intégrer un hub + un stockage de masse + une interface réseau. Exemple: smartphone.
    </p>
    <p>
        Avec la disparation des claviers et souris PS/2, les ports USB ne peuvent pas être entièrement désactivés. Les périphériques USB de communication, d'interface utilisateur, de stockage peuvent transporter et/ou exécuter des programmes malveillants. Sur un système durci, hors opération de maintenance, les périphériques de stockage de masse (clés USB) sont généralement bloqués, mais...
    </p>
    <h3>Les menaces USB: les périphériques d'interface utilisateur</h3>
    <p>
        Un système d'exploitation accepte en toute confiance claviers et souris USB (HID). Il est possible d'émuler un clavier et d'envoyer des instructions préprogrammées depuis un périphérique USB ayant l'apparence d'une clé USB. Exemple : « Rubber Ducky ». Un utilisateur bien intentionné peut être manipulé pour insérer ce qu'il croit être une clé USB inoffensive. Sur un système durci, même sans accès direct à la machine, un utilisateur malveillant peut aisément ouvrir la souris ou le clavier USB et récupérer une connectique.
    </p>
    <h3>Les menaces USB: les périphériques de communication</h3>
    <p>
        Les périphériques de communication sont souvent automatiquement reconnus. Un périphérique de communication peut établir une liaison vers Internet sans passer par le réseau de l'entreprise. Exemple: smartphone avec liaison 4G/5G. Permet d'échapper aux moyens de détection du réseau de l'entreprise. Permet d'établir un canal vers un centre de contrôle et commande distant. Nous sommes certainement nombreux à recharger notre smartphone sur notre PC. L'utilisation d'un « data blocker » est fortement recommandée.
    </p>
    <h3>Face aux menaces USB</h3>
    <p>
        La sensibilisation des utilisateurs reste primordiale. Des moyens de détection des menaces sont nécessaires. Une surveillance active (humaine) est recommandée en complément des moyens d'alerte passifs. La défense en profondeur doit être complétée par : une centralisation des logs, un Maintien en Conditions de Sécurité et une surveillance des vulnérabilités.
    </p>
</section>


<section class="content-block">
    <h2><i class="fas fa-laptop-code" aria-hidden="true"></i>Exercices Pratiques</h2>

    <h3>Exercice 1 : Identifier les périphériques USB</h3>
    <p>
        <strong>Objectif :</strong> Apprendre à lister et identifier tous les périphériques connectés à une machine Linux. C'est la première étape de reconnaissance, essentielle pour comprendre l'environnement sur lequel on opère et pour récupérer les identifiants nécessaires aux manipulations futures.
    </p>
    <p>
        Nous utiliserons deux commandes principales : <code>lsusb</code> pour lister les périphériques sur le bus USB et <code>xinput</code> pour lister les périphériques d'entrée comme les claviers et souris.
    </p>
    
    <details>
        <summary style="cursor: pointer;">Afficher / Masquer la Solution</summary>
        <div class="solution-content">
    <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code>
# Liste les périphériques connectés au bus USB
lsusb

# Met à jour la liste des paquets
sudo apt update

# Installe l'utilitaire pour les périphériques d'entrée
sudo apt install xinput

# Liste les périphériques d'entrée (claviers, souris, etc.) et leurs ID
xinput list
</code></pre>
 </div>
</details>

    <hr style="margin: 30px 0;">

    <h3>Exercice 2 : Le langage « Ducky Script » - Premier script</h3>
    <p>
        <strong>Objectif :</strong> Créer et exécuter un premier script simple avec le langage "Ducky Script". Ce langage permet d'automatiser des frappes de clavier, simulant ainsi une action humaine très rapidement. Nous allons écrire un script qui ouvre un terminal et y exécute une commande.
    </p>
    <p>
        Pour cela, nous devons d'abord mettre en place un environnement Python qui convertira notre script Ducky en un script exécutable.
    </p>
    
    <details>
        <summary style="cursor: pointer;">Afficher / Masquer les Prérequis</summary>
        <div class="solution-content">
            <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code>
# Se déplacer dans le répertoire personnel
cd

# Créer un environnement virtuel pour Python
python3 -m venv venvducky

# Installer la bibliothèque pour contrôler la souris et le clavier
venvducky/bin/pip install pyautogui

# Cloner le convertisseur de Ducky Script vers Python
git clone https://github.com/0ent/ducky2python

# Créer le fichier pour notre script
vi ducky001.txt

# Lancer la conversion et l'exécution du script
venvducky/bin/python ducky2python/ducky2python.py ducky001.txt</code></pre>
        </div>
    </details>
<br>
    <details>
        <summary style="cursor: pointer;">Afficher / Masquer la Solution (Script Ducky)</summary>
        <div class="solution-content"><br>
            <p><strong>Contenu du fichier <em>ducky001.txt</em> :</strong></p>
            <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code>REM Ouvre le lanceur d'applications
DELAY 1000
ALT F2
DELAY 3000
REM Tape le nom du terminal
STRING qterminal
DELAY 300
ENTER
DELAY 1000
REM Exécute la commande 'ls'
STRING ls
DELAY 100
ENTER</code></pre>
            <p><em>Note : Utilisez <code>GUI r</code> (Touche Windows + r) au lieu de <code>ALT F2</code> sur certaines distributions.</em></p>
        </div>
    </details>

    <hr style="margin: 30px 0;">

    <h3>Exercice 3 : Protéger l’exécution du script Ducky</h3>
    <p>
        <strong>Objectif :</strong> Améliorer notre script pour qu'il se protège contre une interruption par l'utilisateur. Pour cela, nous allons désactiver temporairement le clavier et la souris pendant que le script s'exécute, empêchant toute interférence.
    </p>
    <p>
        Nous réutiliserons la commande <code>xinput</code> avec les identifiants (ID) des périphériques que nous avons trouvés dans l'exercice 1.
    </p>
    
    <details>
        <summary style="cursor: pointer;">Afficher / Masquer la Solution</summary>
        <div class="solution-content"><br>
            <p><em>Rappel : Les identifiants du clavier (ici, ex: 10) et de la souris (ex: 8) doivent être récupérés avec <code>xinput list</code>.</em></p>
            <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code>
REM Attendre que l'utilisateur ne soit plus devant le PC
DELAY 4000
ALT F2
DELAY 300
STRING qterminal
DELAY 100
ENTER
DELAY 1000
REM Désactive le clavier (remplacer 10 par l'ID réel)
STRING xinput set-int-prop 10 "Device Enabled" 8 0
DELAY 100
ENTER
DELAY 200
REM Désactive la souris (remplacer 8 par l'ID réel)
STRING xinput set-int-prop 8 "Device Enabled" 8 0
DELAY 100
ENTER
REM --- Placer ici les actions malveillantes ---
REM --- À la fin, réactiver les périphériques ---
</code></pre>
        </div>
    </details>

</section>


    <hr style="margin: 30px 0;">

    <h3>Références (pour aller plus loin)</h3><br>
    <ul>
        <li><a href="https://shop.hak5.org/products/usb-rubber-ducky" target="_blank">https://shop.hak5.org/products/usb-rubber-ducky</a></li>
        <li><a href="https://payloadstudio.hak5.org/community/" target="_blank">https://payloadstudio.hak5.org/community/</a></li>
        <li><a href="https://github.com/taibhse-designs/DuckyEmulator" target="_blank">https://github.com/taibhse-designs/DuckyEmulator</a></li>
        <li><a href="https://fr.wikipedia.org/wiki/Fichier_de_test_Eicar" target="_blank">https://fr.wikipedia.org/wiki/Fichier_de_test_Eicar</a></li>
    </ul>
</section>

<hr style="margin: 30px 0;">


<section class="content-block">
    <h2><i class="fas fa-info-circle" aria-hidden="true"></i>Informations sur le document original</h2>
    <p>
        <b>Titre :</b> L'énergie face aux risques de cybersécurité<br>
        <b>Auteurs :</b> Eduardo Navarro Tarján, Sébastien Blanc, EVIDEN<br>
        <b>Date de publication :</b> 11/04/2024 <br> 
        <b>Contact :</b> eduardo.navarrotarjan@eviden.com / sebastien.blanc@eviden.com<br>
    </p>
</section>

<nav class="content-navigation">
    <a href="./lessons.php" class="nav-button prev-button"><i class="fas fa-arrow-left" aria-hidden="true"></i> Retour aux leçons</a>
    <a href="./lessons.php" class="nav-button next-button">Valider la leçon <i class="fas fa-arrow-right" aria-hidden="true"></i></a>
</nav>
