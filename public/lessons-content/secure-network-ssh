<section class="content-block">
    <h2><i class="fas fa-terminal" aria-hidden="true"></i> Qu'est-ce que SSH (Secure Shell) ?</h2>
    <p>
        Inventé en 1995 et standardisé par la RFC 4251, le <strong>Secure Shell (SSH)</strong> est un protocole de communication réseau qui permet d'établir une connexion sécurisée et chiffrée entre deux machines sur un réseau non sécurisé, comme Internet.
    </p>
    <p>
        Son utilisation la plus courante est de permettre aux administrateurs système et aux développeurs de se connecter à distance à un serveur pour y exécuter des commandes, transférer des fichiers ou gérer le système. Toute la communication, y compris l'authentification par mot de passe, est chiffrée, ce qui la protège contre les écoutes indiscrètes (sniffing) et les attaques de type Man-in-the-Middle.
    </p>
</section>

<section class="content-block">
    <h2><i class="fas fa-key" aria-hidden="true"></i> Authentification par Clés SSH</h2>
    <p>
        Bien que l'authentification par mot de passe soit possible, la méthode la plus sécurisée et recommandée est l'authentification par paire de clés cryptographiques. Le principe est simple :
    </p>
    <ul>
        <li>Une <strong>clé privée</strong> : Elle est secrète, stockée sur votre machine cliente et ne doit jamais être partagée.</li>
        <li>Une <strong>clé publique</strong> : Elle est dérivée de la clé privée et peut être partagée sans risque. Vous la copiez sur les serveurs auxquels vous souhaitez vous connecter.</li>
    </ul>
    <p>
        Lors de la connexion, le serveur utilise la clé publique pour "défier" le client, qui ne peut répondre correctement que s'il possède la clé privée correspondante, prouvant ainsi son identité sans jamais transmettre de secret sur le réseau.
    </p>
    <h3>Génération d'une paire de clés</h3>
    <p>
        La commande <code>ssh-keygen</code> permet de générer une nouvelle paire de clés. Il est recommandé d'utiliser des algorithmes modernes comme Ed25519 ou RSA avec une taille de clé suffisante (3072 ou 4096 bits).
    </p>
</section>

<section class="content-block">
    <h2><i class="fas fa-cogs" aria-hidden="true"></i> Fichiers de Configuration SSH</h2>
    <p>
        Le comportement du client SSH est contrôlé par des fichiers de configuration situés dans le dossier <code>~/.ssh/</code> de l'utilisateur.
    </p>
    <h3>Le fichier `known_hosts`</h3>
    <p>
        Ce fichier est un mécanisme de sécurité crucial. Lors de la première connexion à un serveur, le client SSH vous présente l'empreinte (fingerprint) de la clé publique du serveur et vous demande de la valider. Si vous acceptez, cette clé est enregistrée dans <code>~/.ssh/known_hosts</code>. Lors des connexions futures, le client vérifiera que la clé du serveur n'a pas changé. Si elle a changé, SSH vous avertira d'une possible attaque Man-in-the-Middle.
    </p>
    <h3>Le fichier `config`</h3>
    <p>
        Ce fichier très pratique permet de créer des alias et de pré-configurer les paramètres de connexion pour différents serveurs. Vous pouvez y définir l'adresse IP, le nom d'utilisateur, le port, la clé d'identité à utiliser, et bien d'autres options pour chaque hôte, simplifiant grandement les connexions récurrentes.
    </p>
</section>

<section class="content-block">
    <h2><i class="fas fa-sitemap" aria-hidden="true"></i> Fonctionnalités Avancées de SSH</h2>
    <ul>
        <li><strong>X11 Forwarding (`ssh -X`) :</strong> Permet de lancer une application graphique sur un serveur distant et d'afficher son interface sur votre machine locale.</li>
        <li><strong>Montage de dossier distant (`sshfs`) :</strong> Permet de monter un répertoire d'un serveur distant comme s'il s'agissait d'un disque local sur votre machine, facilitant la manipulation de fichiers.</li>
        <li><strong>Exécution de scripts à distance :</strong> SSH permet d'envoyer et d'exécuter des commandes ou des scripts entiers sur une machine distante de manière non interactive, ce qui est fondamental pour l'automatisation.</li>
        <li><strong>Tunneling (Port Forwarding) :</strong> Permet de créer un tunnel chiffré pour sécuriser le trafic d'autres applications. On peut par exemple rediriger un port de sa machine locale vers un service fonctionnant sur un serveur distant (`-L`), ou l'inverse (`-R`). L'option `-D` crée un proxy SOCKS dynamique pour acheminer tout son trafic via le serveur distant.</li>
    </ul>
</section>

<section class="content-block">
    <h2><i class="fas fa-user-secret" aria-hidden="true"></i> SSH dans un Contexte Offensif</h2>
    <p>
        Une fois un accès SSH obtenu, même avec des droits limités, il peut servir de point d'entrée pour des actions plus poussées.
    </p>
    <ul>
        <li><strong>Persistance avec Cron :</strong> Un attaquant peut mettre en place une tâche planifiée (cron job) pour s'assurer de conserver son accès, par exemple en réactivant le service SSH s'il est coupé ou en se créant un utilisateur.</li>
        <li><strong>Élévation de privilèges :</strong> SSH lui-même est très sécurisé, mais une fois connecté, un attaquant peut exploiter des vulnérabilités locales du système d'exploitation (comme les célèbres "Dirty Cow" ou "Dirty Pipe" sur des noyaux Linux anciens) pour obtenir les droits root.</li>
        <li><strong>Espionnage :</strong> Sur un système mal configuré, il est possible d'accéder aux entrées clavier via des fichiers dans <code>/dev/input</code> pour enregistrer ce que tape un utilisateur.</li>
    </ul>
</section>

<section class="content-block">
    <h2><i class="fas fa-shield-alt" aria-hidden="true"></i> Contre-mesures et Sécurisation</h2>
    <ul>
        <li><strong>Désactiver l'authentification par mot de passe :</strong> Ne permettre que l'authentification par clé SSH.</li>
        <li><strong>Changer le port par défaut :</strong> Changer le port 22 par un autre port non standard peut réduire les scans automatisés.</li>
        <li><strong>Utiliser un pare-feu :</strong> N'autoriser les connexions SSH que depuis des adresses IP de confiance.</li>
        <li><strong>Mettre à jour régulièrement :</strong> Maintenir le serveur SSH et le système d'exploitation à jour pour corriger les failles de sécurité.</li>
        <li><strong>Surveillance :</strong> Surveiller les journaux de connexion pour détecter toute activité suspecte.</li>
    </ul>
</section>

<section class="content-block">
    <h2><i class="fas fa-laptop-code" aria-hidden="true"></i> Exercices Pratiques</h2>

    <h3>Exercice 1 : Générer et utiliser une clé SSH</h3>
    <p>
        <strong>Objectif :</strong> Mettre en place une authentification par clé, la méthode la plus sécurisée pour se connecter à un serveur.
    </p>
    <details>
        <summary style="cursor: pointer;">Afficher / Masquer la Solution</summary><br>
        <div class="solution-content">
            <ol>
                <li><strong>Générer une paire de clés sur votre machine cliente :</strong></li>
            </ol>
            <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code># Utilise l'algorithme Ed25519, moderne et performant
ssh-keygen -t ed25519 -C "votre_email@example.com"</code></pre>
            <p>Appuyez sur Entrée pour accepter les emplacements par défaut. Il est fortement recommandé de définir une "passphrase" (mot de passe) pour protéger votre clé privée.</p>
            <ol start="2">
                <li><strong>Copier la clé publique sur le serveur distant :</strong></li>
            </ol>
            <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code># Remplacez user et server_ip par vos informations
ssh-copy-id user@server_ip</code></pre>
            <p>Cette commande ajoute automatiquement votre clé publique au fichier `~/.ssh/authorized_keys` sur le serveur.</p>
            <ol start="3">
                <li><strong>Testez la connexion :</strong></li>
            </ol>
            <pre style="background-color:#000; border-radius:5px; padding:10px; font-family:monospace;"><code>ssh user@server_ip</code></pre>
            <p>Si vous avez mis une passphrase, elle vous sera demandée. Sinon, vous devriez être connecté instantanément sans mot de passe.</p>
        </div>
    </details>

</section>

<section class="content-block">
    <h2><i class="fas fa-info-circle" aria-hidden="true"></i>Informations sur le document original</h2>
    <p>
        <b>Titre :</b> Le ssh cool<br>
        <b>Auteur :</b> Jean Bleu<br>
        <b>Date de publication :</b> 25 mai 2023
    </p>
</section>


